@use "sass:string";

@mixin scrollbar($width: 10px, $radius: 5px, $color: rgba(#000, 0.3), $background: rgba(#000, 0.1)) {
  @include media("hover") {
    &::-webkit-scrollbar-track {
      background-color: $background;
      border-radius: $radius;
    }

    &::-webkit-scrollbar {
      width: $width;
      height: $width;
    }

    &::-webkit-scrollbar-thumb {
      background-color: $color;
      border-radius: $radius;
    }
  }
}

@mixin absolute-block($width: auto, $height: auto) {
  content: "";
  position: absolute;
  display: block;
  width: $width;
  height: $height;
}

@mixin transition($arguments: all 0.3s var(--easing)) {
  transition: $arguments;
}

@mixin vmargin($margin: $spacing) {
  margin-top: 0;
  margin-bottom: 0;

  &:not(:first-child) {
    margin-top: $margin;
  }

  &:not(:last-child) {
    margin-bottom: $margin;
  }
}

@mixin section {
  --section-padding-top: calc(var(--section-spacing) * 0.5);
  --section-padding-bottom: calc(var(--section-spacing) * 0.5);

  max-width: 100%;
  padding-top: var(--section-padding-top);
  padding-bottom: var(--section-padding-bottom);

  .sections &:first-child,
  .sections .visually-hidden:first-child + & {
    --section-padding-top: calc(var(--section-spacing) * 0.5 + var(--header-offset, 0px));
  }
}

@mixin section-paddings {
  &:not(.section--no-spacing,.visually-hidden) + & {
    &:not(.section--spacing-lg) {
      --section-padding-top: 0;
    }

    &.section--spacing-lg {
      --section-padding-top: calc(var(--section-spacing) * 0.25);

      .section__image + .section__inner {
        padding-top: calc(var(--section-spacing) * 0.25);
      }
    }
  }
}

@mixin inner {
  --inner-padding-left: var(--inner-spacing);
  --inner-padding-right: var(--inner-spacing);

  width: 100%;
  max-width: var(--max-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--inner-padding-left);
  padding-right: var(--inner-padding-right);
}

@mixin block {
  @include vmargin(var(--block-spacing));

  width: 100%;
}

@mixin text {
  font-family: var(--text-family);
  font-weight: var(--text-weight);
  color: var(--text-color);
}

@mixin t1 {
  @include text;

  font-size: var(--text-size);
  line-height: var(--text-height);
}

@mixin t2 {
  @include text;

  font-size: var(--text-size-sm);
  line-height: var(--text-height-sm);
}

@mixin t3 {
  @include text;

  font-size: var(--text-size-lg);
  line-height: var(--text-height-lg);
}

@mixin dark {
  --text-color: #fff;
  --heading-color: #fff;

  color: var(--text-color);
}

@mixin light {
  --text-color: var(--dark-color);
  --heading-color: var(--dark-color);

  color: var(--text-color);
}

@mixin heading {
  @include vmargin(var(--heading-spacing));

  font-family: var(--heading-family);
  font-weight: var(--heading-weight);
  color: var(--heading-color);
}

@mixin h1 {
  @include heading;

  font-size: var(--h1-size);
  line-height: var(--h1-height);
}

@mixin h2 {
  @include heading;

  font-size: var(--h2-size);
  line-height: var(--h2-height);
}

@mixin h3 {
  @include heading;

  font-size: var(--h3-size);
  line-height: var(--h3-height);
}

@mixin h4 {
  @include heading;

  font-size: var(--h4-size);
  line-height: var(--h4-height);
}

@mixin h5 {
  @include heading;

  font-size: var(--h5-size);
  line-height: var(--h5-height);
}

@mixin h6 {
  @include heading;

  font-size: var(--h6-size);
  line-height: var(--h6-height);
}

@mixin underline($style: underline, $thickness: 1px, $offset: 0.25em) {
  text-decoration: $style;
  text-decoration-thickness: $thickness;
  text-underline-offset: $offset;
}

@function str-replace($string, $search, $replace: "") {
  $index: string.index($string, $search);

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }

  @return $string;
}

@function grid-cols($col-count, $base-count: var(--grid-columns), $add: 0) {
  @return calc((((100% - (#{$base-count} - 1) * var(--grid-col-gap)) / #{$base-count}) * #{$col-count} + (#{$col-count} - 1) * var(--grid-col-gap)) + #{$add});
}

@function grid-offset($col-count, $base-count: var(--grid-columns), $add: var(--grid-col-gap)) {
  @return calc((((100% - (#{$base-count} - 1) * var(--grid-col-gap)) / #{$base-count}) * #{$col-count} + (#{$col-count} - 1) * var(--grid-col-gap)) + #{$add});
}

.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}
