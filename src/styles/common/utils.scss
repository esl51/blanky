/* Utils */
@use "sass:math";
@use "sass:string";

@mixin scrollbar($width: 10px, $radius: 5px, $color: rgba(#000, 0.3), $background: rgba(#000, 0.1)) {
  @include media("hover") {
    &::-webkit-scrollbar-track {
      background-color: $background;
      border-radius: $radius;
    }

    &::-webkit-scrollbar {
      width: $width;
    }

    &::-webkit-scrollbar-thumb {
      background-color: $color;
      border-radius: $radius;
    }
  }
}

@mixin absolute-block($width: auto, $height: auto) {
  content: "";
  position: absolute;
  display: block;
  width: $width;
  height: $height;
}

@mixin transition($arguments: all 0.3s $easing) {
  transition: $arguments;
}

@mixin vmargin($margin: $spacing) {
  margin-top: 0;
  margin-bottom: 0;

  &:not(:first-child) {
    margin-top: $margin;
  }

  &:not(:last-child) {
    margin-bottom: $margin;
  }
}

@mixin section {
  --section-padding-top: calc(#{$section-spacing} * 0.5);
  --section-padding-bottom: calc(#{$section-spacing} * 0.5);

  max-width: 100%;
  padding-top: var(--section-padding-top);
  padding-bottom: var(--section-padding-bottom);
}

@mixin inner {
  --inner-padding-left: #{$inner-spacing};
  --inner-padding-right: #{$inner-spacing};

  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--inner-padding-left);
  padding-right: var(--inner-padding-right);
}

@mixin block {
  @include vmargin($block-spacing);

  width: 100%;
}

@mixin text {
  font-family: $text-family;
  font-weight: $text-weight;
  color: $text-color;
}

@mixin t1 {
  @include text;

  font-size: $text-size;
  line-height: $text-height;
}

@mixin t2 {
  @include text;

  font-size: $text-size-sm;
  line-height: $text-height-sm;
}

@mixin t3 {
  @include text;

  font-size: $text-size-lg;
  line-height: $text-height-lg;
}

@mixin dark {
  --text-color: #fff;
  --heading-color: #fff;

  color: var(--text-color);
}

@mixin light {
  --text-color: #{$dark-color-hex};
  --heading-color: #{$dark-color-hex};

  color: var(--text-color);
}

@mixin heading {
  @include vmargin($heading-spacing);

  font-family: $heading-family;
  font-weight: $heading-weight;
  color: $heading-color;
}

@mixin h1 {
  @include heading;

  font-size: $h1-size;
  line-height: $h1-height;
}

@mixin h2 {
  @include heading;

  font-size: $h2-size;
  line-height: $h2-height;
}

@mixin h3 {
  @include heading;

  font-size: $h3-size;
  line-height: $h3-height;
}

@mixin h4 {
  @include heading;

  font-size: $h4-size;
  line-height: $h4-height;
}

@mixin h5 {
  @include heading;

  font-size: $h5-size;
  line-height: $h5-height;
}

@mixin h6 {
  @include heading;

  font-size: $h6-size;
  line-height: $h6-height;
}

@function str-replace($string, $search, $replace: "") {
  $index: string.index($string, $search);

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }

  @return $string;
}

@function grid-cols($col-count, $base-count: $columns, $add: 0) {
  @return calc((((100% - (#{$base-count} - 1) * #{$col-gutter}) / #{$base-count}) * #{$col-count} + (#{$col-count} - 1) * #{$col-gutter}) + #{$add});
}

@function grid-offset($col-count, $base-count: $columns, $add: $col-gutter) {
  @return calc((((100% - (#{$base-count} - 1) * #{$col-gutter}) / #{$base-count}) * #{$col-count} + (#{$col-count} - 1) * #{$col-gutter}) + #{$add});
}

.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}
